plugins {
  id 'org.springframework.boot' version '3.0.1'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'java'
  id("io.micronaut.test-resources") version "3.6.7"
}

apply plugin: 'java'

group = 'org.springframework.samples'
version = '3.0.0'
sourceCompatibility = '17'

repositories {
  mavenCentral()
}

ext.webjarsFontawesomeVersion = "4.7.0"
ext.webjarsBootstrapVersion = "5.1.3"

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'javax.cache:cache-api'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
    runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
    runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"
    runtimeOnly 'com.github.ben-manes.caffeine:caffeine'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.postgresql:postgresql'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    implementation platform('org.testcontainers:testcontainers-bom:1.17.6') //import bom
    testRuntimeOnly("io.cloudflight.testresources.springboot:springboot-testresources-client:0.2.0")
    testResourcesImplementation ("io.cloudflight.testresources.springboot:springboot-testresources-jdbc-postgres:0.2.0")
    testImplementation "org.testcontainers:postgresql"
}

tasks.named('test') {
  useJUnitPlatform()
}
